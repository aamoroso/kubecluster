---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2beta2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: &app calibre
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.2.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  # maxHistory: 2
  install:
    # disableWait: true       # ASA debug.  With disableWait: true, Flux will no longer wait for the resources to become ready, so you can inspect the deployment and find the underlying issue e.g. kubectl describe deployment podinfo.
    # createNamespace: true
    remediation:
      retries: 3
  upgrade:
    # disableWait: true       # ASA debug.  With disableWait: true, Flux will no longer wait for the resources to become ready, so you can inspect the deployment and find the underlying issue e.g. kubectl describe deployment podinfo.
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controllers:
      calibre:
        containers:
          app:
            image:
              repository: ghcr.io/linuxserver/calibre
              tag: version-v7.12.0@sha256:7cef47ba7fd105e2352b48fcff50c43a78415511beee2f742000cf9de5609331
            env:
              TZ: "${TIMEZONE}"
              CUSTOM_PORT: &port 8080           # Not necessary but just wanted to add the ref
              # PUID: "1000"
              # PGID: "1000"
            securityContext:                    # Borrowed from Phycoforce
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            probes:                             # Borrowed from Phycoforce
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /                     # Just use the home page
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            resources:
              requests:
                cpu: 15m
                memory: 324M
              limits:
                memory: 604M
        pod:
          securityContext:
            runAsUser: 65534
            runAsGroup: 65534
            runAsNonRoot: true
    service:
      app:
        controller: *app
        ports:
          http:
            port: *port
    ingress:
      app:
        enabled: true
        className: external
        annotations:
          external-dns.alpha.kubernetes.io/target: "external.${SECRET_DOMAIN}"

        # className: nginx
        # annotations:
          # nginx.ingress.kubernetes.io/auth-method: GET
          # nginx.ingress.kubernetes.io/auth-url: http://authelia.default.svc.cluster.local.:8888/api/verify
          # nginx.ingress.kubernetes.io/auth-signin: https://auth.${SECRET_DOMAIN}?rm=$request_method
          # nginx.ingress.kubernetes.io/auth-response-headers: Remote-User,Remote-Name,Remote-Groups,Remote-Email
          # nginx.ingress.kubernetes.io/auth-snippet: proxy_set_header X-Forwarded-Method $request_method;
          # hajimari.io/icon: mdi:bookshelf
          # gethomepage.dev/enabled: "true"
          # gethomepage.dev/group: Media
          # gethomepage.dev/name: Calibre
          # gethomepage.dev/icon: calibre.png
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *host
    persistence:
      config:
        enabled: true
        existingClaim: *app
        # globalMounts:
        #   - path: /config
      books:
        enabled: true
        type: nfs
        server: 192.168.0.53  # vhost3
        path: /mnt/data/containers/rdp-calibre/config # exporting old calibre dir
        # Configure mounts to all controllers and containers. By default the persistence item
        # will be mounted to `/<name_of_the_peristence_item>`.
        # globalMounts:
        #   - path: /mnt/storage/home/claude/books
