##
#
# @TODO
# * add ingresses to dashboards
#
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
spec:
  interval: 1h
  chart:
    spec:
      chart: kube-prometheus-stack
      version: 62.3.1
      sourceRef:
        kind: HelmRepository
        name: prometheus-community
        namespace: flux-system
  # chartRef:
  #   kind: OCIRepository
  #   name: kube-prometheus-stack
  install:
    crds: Create
  upgrade:
    crds: CreateReplace
  driftDetection:
    mode: enabled
    ignore:
      # Ignore "validated" annotation which is not inserted during install
      - paths: [ "/metadata/annotations/prometheus-operator-validated" ]
        target:
          kind: PrometheusRule
  valuesFrom:
  - kind: ConfigMap
    name: flux-kube-state-metrics-config
    valuesKey: kube-state-metrics-config.yaml
  # https://github.com/prometheus-community/helm-charts/blob/main/charts/kube-prometheus-stack/values.yaml
  values:
    alertmanager:
      enabled: true         # Testing enabling this
      ingress:
        enabled: true
        annotations:
          external-dns.alpha.kubernetes.io/target: external.${SECRET_DOMAIN}    # Not sure why we need this for an internal ingress
        ingressClassName: internal
        hosts: ["alertmanager.amoroso.name"]
        pathType: Prefix
      # alertmanagerSpec:
      #   useExistingSecret: true
      #   configSecret: alertmanager-secret
        storage:
          volumeClaimTemplate:
            spec:
              # storageClassName: ceph-filesystem
              storageClassName: ceph-block
              resources:
                requests:
                  storage: 1Gi

    prometheus:
      ingress:
        enabled: true
        ingressClassName: internal
        annotations:
          external-dns.alpha.kubernetes.io/target: external.${SECRET_DOMAIN}    # Not sure why we need this for an internal ingress
        hosts:
          - prometheus.amoroso.name
        pathType: Prefix

      prometheusSpec:
        retention: 24h
        resources:
          requests:
            cpu: 200m
            memory: 200Mi
        podMonitorNamespaceSelector: { }
        podMonitorSelector:
          matchLabels:
            app.kubernetes.io/component: monitoring
        # storageSpec:
        #   volumeClaimTemplate:
        #     spec:
        #       storageClassName: ceph-block
        #       resources:
        #         requests:
        #           storage: 55Gi


    grafana:
      defaultDashboardsEnabled: false
      adminPassword: flux
